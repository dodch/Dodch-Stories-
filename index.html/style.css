:root{
  /* Light mode variables (default) */
  --heart-color:rgba(255,255,255,0.8);
  --heart-active:#fb4268;
  --bg-url:url("https://i.ibb.co/dwxdSbcK/IMG-2516.jpg");
  --bg-url-dark:url("https://i.ibb.co/1fTfj1j5/IMG-2515.jpg");
  --main-bg:rgba(0,0,0,0);
  --moon-color:#fff;
  --notification-text:#fff;
  --search-placeholder:rgba(255,255,255,0.5);
  --tint-color:#fff;
  --blue-tint:#00aaff;
  --purple-tint:#a366ff;
  --red-tint:#ff3366;
  --golden-tint:gold;
  --glass-bg:color-mix(in srgb,var(--tint-color) 10%,transparent);
  --glass-text:#f0f0f0;
  /* REFACTOR: Enhanced shadow for more depth and contrast. */
  --glass-shadow:
    /* Inner highlights for a sharp, glassy edge */
    inset 0 0 0 1.5px color-mix(in srgb, #fff 15%, transparent),
    inset 1px 2px 1px -1px color-mix(in srgb, #fff 80%, transparent),
    inset -1px -1px 1px -1px color-mix(in srgb, #fff 70%, transparent),
    /* Inner shadows for depth */
    inset 0px 2px 4px -2px color-mix(in srgb, #000 30%, transparent),
    inset 2px -4px 2px -3px color-mix(in srgb, #000 20%, transparent),
    /* Outer drop shadow for separation from the background */
    0px 4px 12px 0px color-mix(in srgb, #000 25%, transparent),
    0px 15px 35px 0px color-mix(in srgb, #000 20%, transparent);
  /* NEW: A simpler shadow for the stacked cards, without the inset borders. */
  --stack-shadow:
    0px 4px 12px 0px color-mix(in srgb, #000 25%, transparent),
    0px 15px 35px 0px color-mix(in srgb, #000 20%, transparent);
  --button-shadow:var(--glass-shadow);
  transition: all 0.5s ease-in-out;
  --panel-blur-start: 10px;
  
  /* NEW: Viewport variable for the mobile fix (using largest for fixed elements) */
  --vph: 100lvh;
  --blur-radius: 3px;

}
/* Dark mode variables based on device settings or manual override */
@media (prefers-color-scheme: dark) {
  :root {
    --main-bg: rgba(0,0,0,0.7);
    --moon-color:#fce38a;
    --notification-text:#f0f0f0;
    --search-placeholder:rgba(255,255,255,0.8);
    --tint-color:#888;
    --blue-tint:#00aaff;
    --purple-tint:#a366ff;
    --red-tint:#ff3366;
    --golden-tint:gold;
    --glass-bg:rgba(0,0,0,0.35);
    --glass-text:#f0f0f0;
    /* REFACTOR: Enhanced shadow for more depth and contrast in dark mode. */
    --glass-shadow:
      /* Inner highlights for a sharp, glassy edge */
      inset 0 0 0 1.5px color-mix(in srgb, #fff 12%, transparent),
      inset 1px 2px 1px -1px color-mix(in srgb, #fff 70%, transparent),
      inset -1px -1px 1px -1px color-mix(in srgb, #fff 60%, transparent),
      /* Inner shadows for depth */
      inset 0px 2px 4px -2px color-mix(in srgb, #000 40%, transparent),
      inset 2px -4px 2px -3px color-mix(in srgb, #000 30%, transparent),
      /* Outer drop shadow for separation from the background */
      0px 5px 15px 0px color-mix(in srgb, #000 40%, transparent),
      0px 20px 40px 0px color-mix(in srgb, #000 35%, transparent);
    --stack-shadow:
      0px 5px 15px 0px color-mix(in srgb, #000 40%, transparent),
      0px 20px 40px 0px color-mix(in srgb, #000 35%, transparent);
    --button-shadow:var(--glass-shadow);
  }
}
/* This class can be used for a manual toggle button if you add one later */
body.dark-mode {
  --main-bg: rgba(0,0,0,0.7);
  --moon-color:#fce38a;
  --notification-text:#f0f0f0;
  --search-placeholder:rgba(255,255,255,0.8);
  --tint-color:#888;
  --blue-tint:#00aaff;
  --purple-tint:#a366ff;
  --red-tint:#ff3366;
  --golden-tint:gold;
  --glass-bg:rgba(0,0,0,0.35);
  --glass-text:#f0f0f0;
  /* REFACTOR: Enhanced shadow for more depth and contrast in dark mode. */
  --glass-shadow:
    /* Inner highlights for a sharp, glassy edge */
    inset 0 0 0 1.5px color-mix(in srgb, #fff 12%, transparent),
    inset 1px 2px 1px -1px color-mix(in srgb, #fff 70%, transparent),
    inset -1px -1px 1px -1px color-mix(in srgb, #fff 60%, transparent),
    /* Inner shadows for depth */
    inset 0px 2px 4px -2px color-mix(in srgb, #000 40%, transparent),
    inset 2px -4px 2px -3px color-mix(in srgb, #000 30%, transparent),
    /* Outer drop shadow for separation from the background */
    0px 5px 15px 0px color-mix(in srgb, #000 40%, transparent),
    0px 20px 40px 0px color-mix(in srgb, #000 35%, transparent);
  --stack-shadow:
    0px 5px 15px 0px color-mix(in srgb, #000 40%, transparent),
    0px 20px 40px 0px color-mix(in srgb, #000 35%, transparent);
  --button-shadow:var(--glass-shadow);
}
html {
  height: 100%;
  scroll-behavior: smooth;
}
body {
  margin:0;
  color:#fff;
  font-family:sans-serif;
  padding:40px;
  background-color:#2e3b55;
  position: relative;
  overflow-x: hidden;
  transition: all 0.5s ease-in-out;
  /* FIX: Use 100dvh for stable mobile layout height (Dynamic Viewport Height) */
  min-height: 100dvh; 
}

/* --- NEW: Mobile Keyboard Fix --- */
/* When the keyboard is active, switch fixed elements to absolute to prevent layout bugs on scroll. */
body.keyboard-active::before,
body.keyboard-active .top-left-fixed-wrapper,
body.keyboard-active .top-right-fixed-wrapper,
body.keyboard-active .floating-buttons-container {
  position: absolute;
}
/* Adjust the top position of the background when it's absolute. */
body.keyboard-active::before {
  top: var(--scroll-y, 0);
}
/* Adjust the top position of the header buttons when they're absolute. */
body.keyboard-active .top-left-fixed-wrapper,
body.keyboard-active .top-right-fixed-wrapper {
    top: var(--scroll-y, 0);
}
body::before {
  content: '';
  /* Fixed position for background */
  position: fixed; 
  top: 0;
  left: 0;
  width: 100vw;
  /* FIX: Use 100lvh for stable mobile background height (Largest Viewport Height) */
  height: 100lvh; 
  background-image: var(--bg-url);
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  z-index: -1;
  transition: background-image 1s ease-in-out, background-color 1s ease-in-out;
}
/* Applies the dark background for the manual button toggle */
body.dark-mode::before {
  background-image: var(--bg-url-dark);
}
/* Applies the dark background for device preference */
@media (prefers-color-scheme: dark) {
  body::before {
    background-image: var(--bg-url-dark);
  }
}
h1{margin:0 0 20px;}
.grid {
  display:grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  grid-auto-rows: minmax(min-content, auto);
  gap:20px;
  margin-top: 100px;
  transition: all 0.5s ease-in-out;
}

.glass-container {
  background:var(--glass-bg);
  border-radius:3rem;
  padding:20px;
  box-shadow:var(--glass-shadow);
  /* OPTIMIZATION: Force layer promotion to the GPU for smoother animations. */
  transform: translateZ(0);
  will-change: transform, opacity;
  overflow: hidden; /* To contain the shine effect */
  transition: box-shadow 0.2s, background 0.5s ease-in-out, backdrop-filter 0.4s ease-out, -webkit-backdrop-filter 0.4s ease-out, opacity 0.5s ease-out;
  transform-style: preserve-3d; /* NEW: Enable 3D transformations for children */
  cursor:pointer;
  text-decoration: none;
  color: var(--glass-text);
  position: relative;
  /* PERFORMANCE TRICK: Tell the browser this is a self-contained component */
  contain: layout style paint;

  /* --- Backdrop Filter Fallback --- */
  /* Apply the simple blur universally. This will work on iOS Safari. */
  -webkit-backdrop-filter: blur(var(--blur-radius));
  backdrop-filter: blur(var(--blur-radius));
}

/* FIX: Explicitly disable pointer events on cards during scroll to prevent unwanted CSS :hover effects. */
body.is-scrolling .glass-container {
  pointer-events: none;
}

/* If JS detects SVG filter support, enhance the blur. This will NOT run on iOS. */
body.svg-filter-supported .glass-container {
  -webkit-backdrop-filter: blur(var(--blur-radius)) url(#filter-hq);
  backdrop-filter: blur(var(--blur-radius)) url(#filter-hq);
}

/* NEW: A simpler, performance-optimized blur for stacked cards */
.simple-blur {
  /* This overrides the complex SVG filter from the main class */
  -webkit-backdrop-filter: blur(var(--blur-radius));
  backdrop-filter: blur(var(--blur-radius));
}

/* --- NEW: 3-Tier Performance Level Adjustments --- */

/* Level 1 (Weak): No blur, simple transparency. */
.perf-level-1 .glass-container,
.perf-level-1 .glass-button-base,
.perf-level-1 .search-bar,
.perf-level-1 .modal-panel,
.perf-level-1 .info-panel {
    -webkit-backdrop-filter: none;
    backdrop-filter: none;
    box-shadow: var(--glass-shadow); /* FIX: Restore glass border for grids and panels */
    background: linear-gradient(145deg, #4a5568, #2d3748); /* NEW: Nice solid gradient */
    color: #ffffff;
}
body.dark-mode .perf-level-1 .glass-container,
body.dark-mode .perf-level-1 .modal-panel,
body.dark-mode .perf-level-1 .info-panel {
    background: linear-gradient(145deg, #2d3748, #1a202c); /* NEW: Darker solid gradient */
}
/* FIX: Add a specific rule for favorited cards in level 1 to ensure they turn pink. */
.perf-level-1 .glass-container.favorited {
    background: linear-gradient(145deg, #ef4444, #d946ef, #8b5cf6); /* NEW: Richer, multi-color gradient */
}
body.dark-mode .perf-level-1 .glass-container.favorited {
    background: linear-gradient(145deg, #c12a4d, #a855f7, #6d28d9); /* NEW: Darker multi-color gradient */
}
/* NEW: Solid backgrounds for buttons on level 1, preserving their color identity */
.perf-level-1 .glass-button-base,
.perf-level-1 .search-bar {
    background: none; /* FIX: Remove default transparent background before applying solid color. */
    -webkit-backdrop-filter: none;
    backdrop-filter: none;
    box-shadow: var(--glass-shadow); /* NEW: Restore glass border for buttons */
}
/* FIX: Increase specificity to ensure solid colors are applied correctly. */
.perf-level-1 .search-button, .perf-level-1 .search-bar, .perf-level-1 #contactBtn.floating-button {
    background-color: var(--blue-tint);
}
.perf-level-1 #filterBtn.floating-button {
    background-color: var(--red-tint);
}
.perf-level-1 #infoButton.info-button {
    background-color: var(--red-tint);
}
.perf-level-1 #perfBtn.floating-button {
    background-color: var(--golden-tint);
}
body.dark-mode .perf-level-1 .search-button, body.dark-mode .perf-level-1 .search-bar, body.dark-mode .perf-level-1 #contactBtn.floating-button {
    background-color: #005a8c; /* Dark solid blue */
}
body.dark-mode .perf-level-1 #filterBtn.floating-button {
    background-color: #a62244; /* Dark solid red */
}
body.dark-mode .perf-level-1 #infoButton.info-button {
    background-color: #a62244; /* Dark solid red */
}
body.dark-mode .perf-level-1 #perfBtn.floating-button {
    background-color: #b38600; /* Dark solid gold */
}

/* Level 2 (Moderate): Basic blur, no SVG filter or pseudo-element effects. */
.perf-level-2 .glass-container,
.perf-level-2 .glass-button-base,
.perf-level-2 .search-bar,
.perf-level-2 .modal-panel,
.perf-level-2 .info-panel {
    -webkit-backdrop-filter: blur(var(--blur-radius)); /* Basic blur */
    backdrop-filter: blur(var(--blur-radius));
}

/* --- REFACTOR: Advanced proximity shine effect for cards and buttons --- */
.glass-container::before {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  /* FIX: Use multiple layered gradients for a realistic edge shine effect. */
  background:
    /* 1. A sharp, bright highlight for the core reflection */
    radial-gradient(circle at var(--pointer-x) var(--pointer-y),
      rgba(255, 255, 255, 0.8) 0%, /* Intense center */
      rgba(255, 255, 255, 0.2) 35%, /* Sharp falloff */
      transparent 50%
    ),
    /* 2. A larger, softer underlying glow for a natural feel */
    radial-gradient(circle at var(--pointer-x) var(--pointer-y), rgba(255, 255, 255, 0.2) 0%, transparent 70%);
  opacity: var(--spotlight-opacity, 0);
  pointer-events: none; /* Ensure it doesn't block clicks on the card */
  transition: opacity 0.4s ease-out;
  content: ''; /* Required for pseudo-element */
}

/* NEW: Simpler, more focused shine effect specifically for buttons. */
.shine-effect {
  position: absolute; top: 0; left: 0; right: 0; bottom: 0; border-radius: inherit;
  background: radial-gradient(120px circle at var(--pointer-x) var(--pointer-y), rgba(255, 255, 255, 0.5), transparent 40%);
  opacity: var(--spotlight-opacity, 0);
  pointer-events: none;
  transition: opacity 0.4s ease-out;
}

/* Disable expensive pseudo-elements on lower performance tiers */
.perf-level-1 .glass-container::before, .perf-level-1 .shine-effect,
.perf-level-2 .glass-container::before, .perf-level-2 .shine-effect,
.perf-level-1 .glass-container:not(.series-stack)::after,
.perf-level-2 .glass-container:not(.series-stack)::after {
    display: none;
}
/* NEW: Add a second pseudo-element to create a soft, convex highlight for a "puffy" 3D look. */
/* FIX: Exclude .series-stack to prevent this from overriding the stacking pseudo-element. */
.glass-container:not(.series-stack)::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  background: radial-gradient(ellipse at 50% 0%, rgba(255, 255, 255, 0.15) 0%, transparent 80%);
  opacity: 0.8;
  pointer-events: none;
  transition: opacity 0.5s ease-out;
}

.glass-container.force-hover-off:hover {
  pointer-events: none;
}

.glass-container.favorited{
  background-color:color-mix(in srgb,var(--heart-active) 25%,transparent)
}
.glass-content {
  text-align: left;
  padding: 3rem 2rem 3rem 2rem;
  position: relative;
  /*
    FIX: This z-index ensures the text content sits on top of the series-stack's
    pseudo-elements without disrupting the layout of sibling elements like the favorite button.
  */
  z-index: 1;
}
.title {
  /* FIX: Use a dominant serif font and a stronger, layered shadow for maximum clarity. */
  font-size: 2rem;
  font-weight: 900;
  margin-bottom: 0.5rem;
  font-family: 'Playfair Display', serif;
  text-shadow: 0 2px 3px rgba(0,0,0,0.8), 0 0 10px rgba(0,0,0,0.5);
  /* FIX: Add transition for smooth hover animation. */
  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  /* FIX: Revert to left alignment for titles */
  text-align: left;
}
.description {
  font-size: 1rem;
  opacity: .8;
  font-family: 'Open Sans', sans-serif;
  /* FIX: Add a stronger, layered shadow to lift text from the background. */
  text-shadow: 0 1px 2px rgba(0,0,0,0.9), 0 0 5px rgba(0,0,0,0.5);
  /* FIX: Add transition for smooth hover animation. */
  transition: all 0.3s ease-out;
}

/* --- NEW: Premium Text Hover Effect (for non-touch devices) --- */
/* This media query applies hover effects only on devices that can truly hover. */
@media (hover: hover) and (pointer: fine) {
  body:not(.is-scrolling) .glass-container:hover .title {
    color: var(--golden-tint);
    text-shadow: 0 0 10px color-mix(in srgb, var(--golden-tint) 70%, transparent), 0 2px 3px rgba(0,0,0,0.8);
    transform: translateY(-2px) scale(1.02);
  }
  body:not(.is-scrolling) .glass-container:hover .description {
    opacity: 1;
    color: var(--glass-text);
    transform: translateY(-1px);
  }
}

/* --- NEW: Active/Tap Effect for Text on Mobile --- */
/* This applies a similar visual effect to the hover state, but triggers on tap. */
.glass-container:active .title {
  color: var(--golden-tint);
  text-shadow: 0 0 10px color-mix(in srgb, var(--golden-tint) 70%, transparent), 0 2px 3px rgba(0,0,0,0.8);
  transform: translateY(-2px) scale(1.02);
}
.glass-container:active .description {
  opacity: 1;
  color: var(--glass-text);
  transform: translateY(-1px);
}
/* Fixed wrapper for the top-right elements */
.top-right-fixed-wrapper {
    position: fixed;
    top: 0;
    right: 0;
    width: auto;
    height: auto;
    padding: 40px; /* Match body padding */
    z-index: 10;
    will-change: transform; 
    transform: translateZ(0);
    display: flex; 
    justify-content: flex-end; 
    align-items: center;
}
.search-container-wrapper {
  position: relative; 
  top: 0;
  right: 0;
  display: flex;
  align-items: center;
  gap: 1rem;
  transform: none; 
  padding: 0;
}
.search-bar {
  width:0;
  height:60px;
  border:none;
  border-radius:30px;
  padding:0;
  color:var(--glass-text);
  font-size:1rem;
  opacity:0;
  visibility:hidden;
  margin-right:0px;
  background-color:color-mix(in srgb,var(--blue-tint) 20%,transparent);
  backdrop-filter:blur(4px);
  -webkit-backdrop-filter:blur(4px);
  box-shadow:var(--glass-shadow);
  /* FIX: Add visibility to the transition and set a delay for smooth closing. */
  transition: width 0.5s ease-in-out, padding 0.5s ease-in-out, opacity 0.5s ease-in-out, background-color 0.5s ease-in-out, visibility 0s 0.5s, transform 0.3s ease-out, box-shadow 0.3s ease-out;
  position: absolute;
  /* FIX: Anchor the search bar to the right, next to the button. */
  right: 70px; /* button width (60px) + gap (10px) */
  z-index: 1; /* Ensure it's on top */
}
.search-bar:focus{outline:none}
/* NEW: Add a subtle lift and glow on hover for the search bar. */
body:not(.is-scrolling) .search-bar:hover {
    transform: scale(1.02);
    box-shadow: 0 0 15px color-mix(in srgb, var(--blue-tint) 30%, transparent), var(--button-shadow);
}

.search-bar::placeholder{color:var(--search-placeholder);}
.search-bar.active{
  /* NEW: Add jello animation on expand. */
  animation: jello-wobble 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  /* FIX: Reset the transition delay so it becomes visible immediately. */
  transition-delay: 0s;
  width:250px;
  padding: 0 20px; /* Reset padding to normal */
  opacity:1;
  visibility:visible;
}
.search-button{
  position: relative;
  width:60px;
  height:60px;
  border-radius:30px;
  box-shadow:var(--button-shadow);
  cursor: pointer;
  background-color:color-mix(in srgb,var(--blue-tint) 20%,transparent);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: box-shadow 0.5s ease-in-out, background-color 0.5s ease-in-out;
  transition: all 0.3s ease-in-out;
  z-index: 2; /* Ensure button is on top */
  backdrop-filter:blur(4px);
  -webkit-backdrop-filter:blur(4px);
  overflow: hidden; /* Contain the shine effect */
  /* REFACTOR: Start button as invisible for fade-in animation. */
  opacity: 0;
  transform: scale(0.95);
}
body:not(.is-scrolling) .search-button:hover, .search-button:focus-visible {
  transform: scale(1.05);
  box-shadow: 0 0 15px color-mix(in srgb, var(--blue-tint) 50%, transparent), var(--button-shadow);
}
.search-button.active {
  background-color: var(--red-tint);
}
body:not(.is-scrolling) .search-button.active:hover, .search-button.active:focus-visible {
  /* FIX: Add a red glow on hover when the button is active (showing the 'X'). */
  box-shadow: 0 0 15px color-mix(in srgb, var(--red-tint) 50%, transparent), var(--button-shadow);
}
.search-button svg.search-icon {
  transform: rotate(0deg) scale(1);
}
.search-button.active svg.search-icon {
  transform: rotate(45deg) scale(0);
}
.search-button svg.close-icon {
  position: absolute;
  transform: rotate(-45deg) scale(0);
}
.search-button.active svg.close-icon {
  transform: rotate(0deg) scale(1);
}
.search-button svg{
  width:30px;
  height:30px;
  fill: none;
  stroke: var(--glass-text);
  stroke-width:2;
  stroke-linecap:round;
  stroke-linejoin:round;
  transition: transform 0.5s ease-in-out, stroke 0.5s ease-in-out;
}
.highlight {
  color: var(--blue-tint);
  text-shadow:0 0 10px var(--blue-tint),0 0 20px var(--blue-tint);
}
/* --- NEW: Styles for Favorite Count and Container --- */
.favorite-container {
  position: absolute;
  top: 1rem;
  right: 1rem;
  display: flex;
  align-items: center;
  /*
    FIX: Set a z-index to ensure the favorite button and count always appear
    on top of the card's content and any pseudo-elements (like the series stack).
  */
  z-index: 2;
  gap: 0.5rem; /* Space between the count and the button */
}
/* FIX: Add transition for smooth position changes on hover. */
.favorite-container, .new-pill { transition: top 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94); }

.favorite-count {
  /* FIX: Revert to the fancier, tilted font while keeping the scroll animation. */
  font-family: 'Quattrocento Sans', sans-serif;
  font-style: italic;
  font-size: 1.4rem;
  font-weight: 400;
  color: var(--glass-text);
  text-shadow: 0 1px 3px rgba(0,0,0,0.7);
  transition: color 0.3s ease, transform 0.2s ease-out;
}

/* FIX: Change the animation to a vertical "scroll blur" effect. */
@keyframes count-scroll-blur {
  0% { opacity: 0; filter: blur(4px); transform: translateY(-100%); }
  50% { opacity: 1; filter: blur(0); transform: translateY(0); }
  70% { transform: translateY(-10%); }
  80% { transform: translateY(5%); }
  90% { transform: translateY(-2%); }
  100% { opacity: 1; filter: blur(0); transform: translateY(0); }
}

.count-animated {
  /* A custom cubic-bezier for a more 'bouncy' and realistic feel */
  animation: count-scroll-blur 0.5s ease-out;
}

/* --- Buttons from the second code --- */
.favorite-btn{
  position:relative; /* No longer needs to be absolute */
  top:auto;
  right:auto;
  width:40px;
  height:40px;
  border-radius:50%;
  opacity:1;
  transform:scale(1);
  background-color: color-mix(in srgb,var(--red-tint) 20%,transparent);
  box-shadow: var(--button-shadow);
  display: flex;
  justify-content: center;
  align-items: center;
  /* FIX: Consolidate transitions and ensure a smooth glow for the box-shadow. */
  transition: background-color 0.5s ease-in-out, box-shadow 0.5s ease-in-out, transform 0.3s ease-in-out;
}
body:not(.is-scrolling) .favorite-btn:hover, .favorite-btn:focus-visible {
  /* REFACTOR: Combine the glow with the base button shadow for a more integrated look. */
  transform: scale(1.05);
  box-shadow: 0 0 20px 5px color-mix(in srgb, var(--red-tint) 50%, transparent), var(--button-shadow);
}
.favorite-btn svg{
  position:relative;
  z-index:2;
  width:20px;
  height:20px;
  fill:var(--heart-color);
  transform:translateY(1px);
  transition:fill 0.5s ease-in-out;
  stroke:black;
  stroke-width:1.5px;
}
.favorite-btn.active svg{
  fill:var(--heart-active);
}
.floating-buttons-container{
  position:fixed;
  bottom:2rem;
  left:2rem;
  display:flex;
  gap:1rem;
  z-index:10;
}
.floating-button{
  width:60px;
  height:60px;
  border-radius:50%;
  box-shadow:var(--button-shadow);
  cursor:pointer;
  display:flex;
  justify-content:center;
  align-items:center;
  background-color: color-mix(in srgb,var(--purple-tint) 40%,transparent);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  transition: background-color 0.5s ease-in-out, box-shadow 0.5s ease-in-out;
  transition: all 0.3s ease-in-out;
  overflow: hidden; /* Contain the shine effect */
  transform-origin: center;
  /* REFACTOR: Start button as invisible for fade-in animation. */
  opacity: 0;
  transform: scale(0.95);
}
body:not(.is-scrolling) .floating-button:hover, .floating-button:focus-visible {
  /* REFACTOR: Combine the glow with the base button shadow for a more integrated look. */
  transform: scale(1.05);
  box-shadow: 0 0 25px 5px color-mix(in srgb, var(--purple-tint) 50%, transparent), var(--button-shadow);
}
#filterBtn.floating-button {
    background-color: color-mix(in srgb,var(--red-tint) 20%,transparent);
}
body:not(.is-scrolling) #filterBtn.floating-button:hover, #filterBtn.floating-button:focus-visible {
    box-shadow: 0 0 25px 5px color-mix(in srgb, var(--red-tint) 50%, transparent), var(--button-shadow);
}
#contactBtn.floating-button {
    background-color: color-mix(in srgb,var(--blue-tint) 20%,transparent);
}
body:not(.is-scrolling) #contactBtn.floating-button:hover, #contactBtn.floating-button:focus-visible {
    box-shadow: 0 0 25px 5px color-mix(in srgb, var(--blue-tint) 50%, transparent), var(--button-shadow);
}
/* NEW: Style for the performance button */
#perfBtn.floating-button {
    background-color: color-mix(in srgb, var(--golden-tint) 20%, transparent);
    /* NEW: Hide the button by default for the easter egg feature. */
    pointer-events: none;
}
body:not(.is-scrolling) #perfBtn.floating-button:hover, #perfBtn.floating-button:focus-visible {
    box-shadow: 0 0 25px 5px color-mix(in srgb, var(--golden-tint) 50%, transparent), var(--button-shadow);
}
.floating-button svg{
  width:30px;
  height:30px;
  fill:var(--glass-text);
  transition:fill 0.5s ease-in-out;
  stroke:black;
  stroke-width:1.5px;
}
#no-favorites-message{
  color:var(--glass-text);
  font-size:1.5rem;
  opacity:0;
  text-align:center;
  position:fixed;
  top:50%;
  left:50%;
  transform:translate(-50%,-40%);
  transition: opacity 0.5s ease-out, transform 0.5s ease-out;
  pointer-events:none;
  width:100%;
  z-index:5;
}
#no-favorites-message.show{
  opacity:1;
  transform:translate(-50%,-55%);
}
.loading{
  position:fixed;top:0;left:0;width:100%;height:100%;background:#000;z-index:9999;
  display:flex;justify-content:center;align-items:center;opacity:1;transition:opacity 1s ease-in-out;
  pointer-events:all;
}
.loading.hidden{
  opacity:0;pointer-events:none;
}
.loading-text{
  text-align:center;width:100%;line-height:100px;
}
.loading-text span{
  display:inline-block;margin:0 5px;color:#fff;font-family:'Quattrocento Sans',sans-serif;
  font-size:2rem;filter:blur(0);animation:blur-text 1.5s infinite linear alternate;
}
.loading-text span:nth-child(1){animation-delay:0s}
.loading-text span:nth-child(2){animation-delay:.2s}
.loading-text span:nth-child(3){animation-delay:.4s}
.loading-text span:nth-child(4){animation-delay:.6s}
.loading-text span:nth-child(5){animation-delay:.8s}
@keyframes blur-text{0%{filter:blur(0)}100%{filter:blur(4px)}}
.notifications-container{
  position:fixed;top:3.5rem;right:100px;display:flex;align-items:center;overflow:hidden;
  white-space:nowrap;z-index:7;height:60px;width:calc(100% - 100px);pointer-events:none;
  /* FIX: Promote the entire container to its own layer to fully isolate the animation from the main grid. */
  will-change: transform;
  transform: translateZ(0);
}
.notifications-container .notification-item{
  color:var(--notification-text);font-size:1.25rem;font-weight:bold;
  animation:slide-left 15s linear infinite;display:inline-block;animation-delay:-5s;
  /* FIX: Promote the scrolling text to its own compositor layer to isolate it from the main grid's heavy animations, ensuring a smooth scroll. */
  will-change: transform;
  transform: translateZ(0);
}
@keyframes slide-left{0%{transform:translateX(100%)}100%{transform:translateX(-100%)}}
.panel-hidden{
  pointer-events:none;height:auto;padding:0;margin:0;border:none;min-height:0;
  overflow:visible;opacity:0;transform:scale(0.9) translateY(20px);display:none;
}
.scroll-fix{
  height:1px;
  margin-top:50px;
}
/* --- Media Query for smaller screens --- */
@media (max-width: 600px) {
  .top-right-fixed-wrapper {
    padding: 20px; /* Adjust padding for mobile */
  }
  .search-bar.active {
    width: 180px;
    padding: 0 15px;
    margin-right: 0.5rem;
  }
  body {
      padding: 20px;
  }
  .floating-buttons-container{
      left:1rem;
      bottom:1rem;
  }
}
.site-footer {
  text-align: center;
  margin-top: 50px;
  color: var(--glass-text);
  opacity: 0.7;
  font-size: 0.9rem;
  /* FIX: Add position and z-index to ensure it sits on top of the bottom vignette. */
  position: relative;
  z-index: 7;
  transition: color 0.5s ease-in-out;
}
.made-by-who {
  font-family: 'Quattrocento Sans', sans-serif;
  font-size: 1.2rem;
  color: var(--golden-tint);
  margin-top: 10px;
}
/* --- Jello Animation CSS --- */
.squash {
  transform: scale(0.85, 0.9);
}
@keyframes jello-wobble {
  0%   { transform: scale(1,1); }
  25%  { transform: scale(0.9, 1.15) rotate(-1deg); }
  50%  { transform: scale(1.1, 0.9) rotate(1deg); }
  75%  { transform: scale(0.95, 1.05) rotate(-0.5deg); }
  100% { transform: scale(1,1) rotate(0); }
}
.jello {
  /* A custom cubic-bezier for a more 'bouncy' and realistic feel */
  animation: jello-wobble 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* --- NEW: Enhanced Jello Animation for Grid Cards --- */
@keyframes jello-grid-squish {
  0%   { transform: scale(1, 1); }
  30%  { transform: scale(1.02, 0.98) rotate(-0.5deg); }
  50%  { transform: scale(0.98, 1.02) rotate(0.5deg); }
  70%  { transform: scale(1.01, 0.99) rotate(-0.2deg); }
  100% { transform: scale(1, 1) rotate(0); }
}
.jello-grid {
  /* FIX: Use the new, more detailed animation for a better visual effect. */
  animation: jello-grid-squish 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* --- Added CSS for story details and status pills --- */
.story-length {
  position: absolute;
  bottom: 40px;
  left: 20px;
  font-size: 0.8rem;
  opacity: 0.7;
  text-transform: capitalize;
  font-family: 'Open Sans', sans-serif;
  /* FIX: Add a stronger, layered shadow for readability. */
  text-shadow: 0 1px 2px rgba(0,0,0,0.9), 0 0 4px rgba(0,0,0,0.5);
  /* NEW: Add transition for hover animation */
  transition: all 0.3s ease-out;
}
.creation-date {
  position: absolute;
  bottom: 40px;
  right: 20px;
  font-size: 0.8rem;
  opacity: 0.7;
  text-transform: capitalize;
  font-family: 'Open Sans', sans-serif;
  /* FIX: Add a stronger, layered shadow for readability. */
  text-shadow: 0 1px 2px rgba(0,0,0,0.9), 0 0 4px rgba(0,0,0,0.5);
  /* NEW: Add transition for hover animation */
  transition: all 0.3s ease-out;
}
.story-creator {
  position: absolute;
  bottom: 20px;
  font-family: 'Quattrocento Sans', sans-serif;
  /* FIX: Use italic style for a signature feel and add a stronger shadow. */
  font-style: italic;
  font-size: 0.8rem;
  opacity: 0.8;
  color: var(--golden-tint);
  text-transform: capitalize;
  /* FIX: Revert to centered alignment for creator text */
  text-align: center;
  width: 100%;
  left: 0;
  text-shadow: 0 1px 2px rgba(0,0,0,0.9), 0 0 5px rgba(0,0,0,0.7);
  /* NEW: Add transition for hover animation */
  transition: all 0.3s ease-out;
}
body:not(.is-scrolling) .glass-container:hover .story-length,
body:not(.is-scrolling) .glass-container:hover .creation-date,
body:not(.is-scrolling) .glass-container:hover .story-creator {
  opacity: 1;
}
.glass-container.no-link {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
    /* NEW: Add a grayscale filter to visually "grey out" the disabled cards. */
    filter: grayscale(1);
}
/* --- New 'status' pill CSS with glow animations --- */
.new-pill {
    position: absolute;
    top: 1.5rem;
    left: 1.5rem;
    color: white;
    font-size: 0.75rem;
    font-weight: bold;
    padding: 4px 8px;
    border-radius: 12px;
    z-index: 10;
    transform-origin: center;
    text-shadow: 0 0 5px rgba(0,0,0,0.5);
    /* REFACTOR: Use a pseudo-element for a more performant glow animation. */
    /* FIX: Removed 'position: relative' which was causing a layout bug. 'position: absolute' is correct. */
    overflow: visible; /* Allow the glow to extend beyond the pill's bounds. */
}
/* REFACTOR: Create the glow effect using a pseudo-element with blur and opacity. */
.new-pill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background-color: inherit; /* Match the pill's color */
    filter: blur(12px); /* Create the soft glow */
    z-index: -1;
    opacity: 0.7;
    /* FIX: Use the CSS variables for the glow effect and ensure smooth transitions. */
    opacity: var(--glow-opacity, 0.7);
    transform: scale(var(--glow-scale, 1));
    transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
}
.new-pill.red {
    background-color: var(--red-tint);
    /* REFACTOR: Animate the more performant transform and opacity properties. */
    animation: pulse-glow 1.5s infinite alternate ease-in-out;
}
.new-pill.purple {
    background-color: var(--purple-tint);
    animation: pulse-glow 1.5s infinite alternate ease-in-out;
}
.new-pill.golden {
    background-color: var(--golden-tint);
    color: black;
    animation: pulse-glow 1.5s infinite alternate ease-in-out;
}
/* REFACTOR: A single, performant keyframe animation for all glows. */
@keyframes pulse-glow {
    from {
        transform: scale(1);
    }
    to {
        transform: scale(1.05);
        /* Animate the pseudo-element's opacity and scale for a breathing effect */
        --glow-opacity: 1;
        --glow-scale: 1.4;
    }
}
/* --- Info Panel CSS --- */
/* Fixed wrapper for the top-left elements */
.top-left-fixed-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: auto;
  height: auto;
  padding: 40px; /* Match body padding */
  z-index: 20;
  will-change: transform;
  transform: translateZ(0);
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.info-container-wrapper {
  position: relative; 
  top: 0;
  left: 0;
  z-index: 20;
  display: flex;
  align-items: center;
  gap: 1rem;
  transition: opacity 0.5s ease-in-out, visibility 0.5s; 
  transform: none; 
  padding: 0;
}
.info-container-wrapper.hidden {
  opacity: 0;
  pointer-events: none;
  visibility: hidden; 
}
.info-button {
  width: 45px;
  height: 45px;
  border-radius: 50%;
  box-shadow: var(--button-shadow);
  cursor: pointer;
  background-color: color-mix(in srgb, var(--red-tint) 40%, transparent);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: box-shadow 0.5s ease-in-out, background-color 0.5s ease-in-out;
  transition: all 0.3s ease-in-out;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  overflow: hidden; /* Contain the shine effect */
  /* REFACTOR: Start button as invisible for fade-in animation. */
  opacity: 0;
  transform: scale(0.95);
}
body:not(.is-scrolling) .info-button:hover, .info-button:focus-visible {
  transform: scale(1.05);
  box-shadow: 0 0 15px color-mix(in srgb, var(--red-tint) 50%, transparent), var(--button-shadow);
}
.info-button svg {
  width: 20px;
  height: 20px;
  fill: none;
  stroke: var(--glass-text);
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  transition: stroke 0.5s ease-in-out;
}
.info-panel {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  /* Keep 100lvh for stable panel height (Largest Viewport Height) */
  height: 100lvh; 
  padding: 80px 40px 40px;
  box-sizing: border-box;
  background-color: var(--glass-bg);
  backdrop-filter: blur(var(--panel-blur-start));
  -webkit-backdrop-filter: blur(var(--panel-blur-start));
  z-index: 100;
  /* FIX: Make the panel itself scrollable */
  overflow-y: auto;
  display: block; /* Change from flex to block */
  text-align: left;
  will-change: transform; /* Promote to its own layer for smooth scrolling */
  transform: scale(0.95);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.5s ease-in-out, transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55), backdrop-filter 0.5s ease-in-out;
}
.info-panel.active {
  opacity: 1;
  transform: scale(1);
  pointer-events: auto;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

/* --- NEW: Custom Scrollbar Styling --- */
/* For Webkit browsers (Chrome, Safari, Edge) */
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.3); /* FIX: Use a dark, transparent track. */
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.2) 8%, rgba(255, 255, 255, 0.1) 90%, rgba(0, 0, 0, 0.2) 100%); /* FIX: Create a sharp 3D glass edge effect. */
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.4); /* FIX: Add a defined edge to the glass. */
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.4) 8%, rgba(255, 255, 255, 0.3) 90%, rgba(0, 0, 0, 0.1) 100%); /* FIX: Make hover state brighter. */
}

/* For Firefox */
html {
  scrollbar-width: thin;
  scrollbar-color: rgba(255, 255, 255, 0.5) rgba(0, 0, 0, 0.3); /* thumb color, track color */
}
.info-content {
    max-width: 600px;
    /* FIX: Center the content block within the scrollable panel */
    margin: 0 auto;
    /* Let content define its own height */
    height: auto;
}
.info-intro {
  font-style: italic;
  opacity: 0.9;
  text-align: center; /* Keep the intro centered */
  margin-bottom: 2rem !important;
}
.info-panel hr {
  border: none;
  height: 1px;
  background-color: color-mix(in srgb, var(--glass-text) 20%, transparent);
  margin: 2rem 0;
}
.info-panel h3 {
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--golden-tint);
  margin-bottom: 1rem;
  text-align: left; /* Ensure subheadings are left-aligned */
  text-shadow: 0 1px 2px rgba(0,0,0,0.5);
}
.info-panel h2 {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 1rem;
  text-align: center; /* Keep main titles centered */
  color: var(--glass-text);
  z-index: 100;
}
.info-panel p {
  font-size: 1.1rem;
  line-height: 1.6;
  margin: 0 0 1rem;
  color: var(--glass-text);
  z-index: 100;
}
.info-panel ul {
  /* FIX: Add styling for lists to ensure consistent spacing and appearance. */
  list-style: none;
  padding-left: 1rem;
  margin: 0 0 1rem;
}
.info-panel li {
  font-size: 1.1rem;
  line-height: 1.6;
  margin-bottom: 0.75rem;
  color: var(--glass-text);
  position: relative;
  padding-left: 1.5rem;
}
.info-panel li::before {
  content: '•';
  color: var(--golden-tint);
  position: absolute;
  left: 0;
}
/* --- Styles for the new Contact Panel --- */
.contact-panel-content, .social-links-content {
    width: 100%;
    max-width: 400px;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}
.panel-button {
    padding: 1rem 2rem;
    border-radius: 2rem;
    font-size: 1.25rem;
    font-weight: bold;
    text-decoration: none;
    color: var(--glass-text);
    box-shadow: var(--button-shadow);
    transition: all 0.3s ease-in-out;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: color-mix(in srgb, var(--blue-tint) 20%, transparent);
    cursor: pointer;
    /* FIX: Remove default browser border from <button> elements to match <a> tags. */
    border: none;
}
body:not(.is-scrolling) .panel-button:hover, .panel-button:focus-visible {
    transform: scale(1.02);
    box-shadow: 0 0 15px color-mix(in srgb, var(--blue-tint) 40%, transparent), var(--button-shadow);
}
.panel-button.social {
    background-color: color-mix(in srgb, var(--purple-tint) 20%, transparent);
}
body:not(.is-scrolling) .panel-button.social:hover, .panel-button.social:focus-visible {
    box-shadow: 0 0 15px color-mix(in srgb, var(--purple-tint) 40%, transparent), var(--button-shadow);
}
.social-link-button {
    padding: 1rem;
    background-color: color-mix(in srgb, var(--golden-tint) 20%, transparent);
}
body:not(.is-scrolling) .social-link-button:hover, .social-link-button:focus-visible {
    transform: scale(1.02);
    box-shadow: 0 0 15px color-mix(in srgb, var(--golden-tint) 40%, transparent), var(--button-shadow);
}
/* Close button styling */
.close-button {
  /* FIX: Change position to 'fixed' to keep it from scrolling with the panel content. */
  position: fixed;
  top: 20px;
  right: 20px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  cursor: pointer;
  background-color: color-mix(in srgb, var(--red-tint) 20%, transparent);
  box-shadow: var(--button-shadow);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.3s ease-in-out;
  z-index: 101;
  /* FIX: Hide the button by default; JS will show it when its panel is active. */
  opacity: 0;
  pointer-events: none;
  transform: scale(0.9);
  transition: opacity 0.4s ease-out, transform 0.4s ease-out;
}
.close-button.active {
  /* FIX: Make the button visible when its panel is active. */
  opacity: 1;
  pointer-events: auto;
  transform: scale(1);
}
.close-button:hover, .close-button:focus-visible {
  transform: scale(1.1);
  box-shadow: 0 0 15px color-mix(in srgb, var(--red-tint) 50%, transparent), var(--button-shadow);
}
.close-button svg {
  width: 20px;
  height: 20px;
  stroke: var(--glass-text);
  stroke-width: 2;
}
body.info-panel-open {
  overflow: hidden;
}

/* --- NEW: Disable background blur when a panel is open --- */
body.info-panel-open .glass-container,
body.info-panel-open .search-bar,
body.info-panel-open .search-button,
body.info-panel-open .floating-button,
body.info-panel-open .info-button {
  -webkit-backdrop-filter: none;
  backdrop-filter: none;
  transition: backdrop-filter 0.3s ease-in-out, -webkit-backdrop-filter 0.3s ease-in-out;
}

/* --- NEW: Disable hover effects when a panel is open --- */
/* FIX: Make the selector more specific to only target the main grid cards, not cards inside a modal. */
body.info-panel-open .grid > .glass-container:hover,
body.info-panel-open .grid > .series-stack:hover,
body.info-panel-open .top-right-fixed-wrapper .search-button:hover,
body.info-panel-open .floating-buttons-container .floating-button:hover {
  transform: none;
  box-shadow: var(--glass-shadow); /* Resets to the default shadow */
  cursor: default;
  pointer-events: none; /* Strongest way to prevent interaction */
}

/* FIX: Re-enable the backdrop filter specifically for cards inside an active series modal. */
body.info-panel-open #seriesModal .glass-container {
  -webkit-backdrop-filter: blur(var(--blur-radius));
  backdrop-filter: blur(var(--blur-radius));
  pointer-events: auto; /* Ensure cards inside the modal are interactive */
}
/* FIX: Re-enable pointer events and hover effects for buttons and content inside the series modal. */
body.info-panel-open #seriesModal .favorite-btn,
body.info-panel-open #seriesModal .glass-content {
    pointer-events: auto;
    cursor: pointer;
}

/* FIX: Add the enhanced text shadow to series part cards for better contrast and consistency. */
.series-parts-grid .title {
    text-shadow: 0 2px 3px rgba(0,0,0,0.8), 0 0 10px rgba(0,0,0,0.5);
}
.series-parts-grid .description {
    text-shadow: 0 1px 2px rgba(0,0,0,0.9), 0 0 5px rgba(0,0,0,0.5);
}


@media (max-width: 600px) {
  .top-left-fixed-wrapper {
    padding: 20px;
  }
  .info-panel {
    padding: 60px 20px 20px;
  }
  .info-panel h2 {
    font-size: 1.5rem;
  }
  .info-panel p {
      font-size: 1rem;
  }

  /* NEW: Tutorial Panel specific styles for mobile */
  .tutorial-content ul {
    padding-left: 0;
    text-align: left;
  }
  .tutorial-content li {
    padding-left: 0;
    margin-bottom: 1rem;
  }
  .tutorial-content li::before {
    content: ''; /* Hide the bullet on mobile for a cleaner look */
  }

  /* FIX: Adjust padding on the series modal for mobile to ensure the grid is centered. */
  #seriesModal {
    padding-left: 20px;
    padding-right: 20px;
  }
}
.tutorial-icon, .tutorial-icon-text {
  width: 24px;
  height: 24px;
  flex-shrink: 0; /* Prevent icon from shrinking */
  display: flex; /* Use flex to center the icon/emoji */
  align-items: center;
  justify-content: center;
}
.tutorial-icon svg {
  width: 100%;
  height: 100%;
  stroke: var(--glass-text);
  stroke-width: 2;
  fill: none;
}

/* --- Tutorial Panel Specific Styles --- */
.tutorial-section {
  margin-bottom: 2rem;
}
.tutorial-heading {
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--golden-tint);
  margin-bottom: 1rem;
  text-align: left;
  text-shadow: 0 1px 2px rgba(0,0,0,0.5);
}
#tutorialStartButton {
  margin-top: 2rem;
  width: 100%;
  /* FIX: Explicitly set the background color and ensure the hover effect is smooth. */
  background-color: color-mix(in srgb, var(--blue-tint) 20%, transparent);
}
#tutorialStartButton:hover, #tutorialStartButton:focus-visible {
  /* FIX: Add back the scale transform to match other buttons, along with the box-shadow. */
  transform: scale(1.02);
  box-shadow: 0 0 15px color-mix(in srgb, var(--blue-tint) 40%, transparent), var(--button-shadow);
}
#tutorialPanel .info-content li {
  display: flex;
  align-items: flex-start;
  /* FIX: Remove padding and use a larger gap for better spacing */
  padding-left: 0;
  gap: 1.5rem;
}
#tutorialPanel .info-content li > div {
  line-height: 1.5;
}
#tutorialPanel li::before {
  content: none;
}

/* --- NEW: Styles for Panel Load Animation --- */
.panel-anim-item {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.5s ease-out, transform 0.5s ease-out;
}
/* REFACTOR: Animate items when they get the 'in-view' class, not just when the panel is active. */
.panel-anim-item.in-view {
  opacity: 1;
  transform: translateY(0);
}

/* FIX: Create a new 'modal-panel' class to restore the original centered pop-up style for Contact/Social panels. */
.modal-panel {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100lvh;
  padding: 40px;
  box-sizing: border-box;
  background-color: var(--glass-bg);
  backdrop-filter: blur(var(--panel-blur-start));
  -webkit-backdrop-filter: blur(var(--panel-blur-start));
  z-index: 100;
  display: flex; /* Use flex to center content */
  justify-content: center;
  align-items: center;
  transform: scale(0.95);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.5s ease-in-out, transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55), backdrop-filter 0.5s ease-in-out;
}
.modal-panel.active {
  opacity: 1;
  transform: scale(1);
  pointer-events: auto;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

/* --- Series Stack Styles --- */
.series-stack {
  position: relative; /* Anchor for pseudo-elements and the main card */
  cursor: pointer;
  /* FIX: Restore the default glass background. This makes the top card opaque relative to the stack behind it. */
  background: var(--glass-bg);
}

/* On hover, the entire stack element lifts and scales */
body:not(.is-scrolling) .series-stack:hover {
  transform: scale(1.03) translateY(-10px);
  transition: transform 0.3s ease-out;
}

/* Create the "ghost" cards behind the main one using pseudo-elements on the container */
.series-stack::before,
.series-stack::after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%; /* Perfectly match the container's size */
  height: 100%; /* Perfectly match the container's size */
  border-radius: 3rem; /* Exactly match the main card's border-radius */

  /* The backdrop-filter applies to the card body */
  z-index: -1; /* Sit behind the main card's content. */
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Smoother transition */
  /* FIX: Set the background and shadow for the stacked cards. */
  background: var(--glass-bg);
  box-shadow: var(--glass-shadow);
  /* FIX: Make the stacked cards invisible by default. */
  opacity: 0;
  /* FIX: Start the cards directly behind the main card. */
  transform: translateY(0) scale(1);
}

/* FIX: On hover, make the stacked cards visible and move them into position. */
body:not(.is-scrolling) .series-stack:hover::before {
  opacity: 1;
  transform: translateY(14px) scale(0.96); /* Furthest back card */
  z-index: -2;
  /* FIX: Add a distinctive golden tint to the third card in the stack. */
  background: color-mix(in srgb, var(--golden-tint) 20%, var(--glass-bg));
}

body:not(.is-scrolling) .series-stack:hover::after {
  opacity: 1;
  transform: translateY(7px) scale(0.98); /* Middle card */
  z-index: -1;
}
/* FIX: On hover, smoothly move the pill and favorite button down to make space for the stacked cards. */
body:not(.is-scrolling) .series-stack:hover .new-pill {
  top: 2.5rem;
}

body:not(.is-scrolling) .series-stack:hover .favorite-container {
  top: 2rem;
}

.series-stack.open {
  cursor: default;
  pointer-events: none;
}

/* --- NEW: Styles for the Series Modal, mimicking the Info Panel --- */
#seriesModal {
  /* This makes the modal scrollable if content overflows */
  overflow-y: auto;
  /* REFACTOR: Remove flex alignment to allow block-level centering and scrolling. */
  display: block;
  /* REFACTOR: Adjust padding to account for the new fixed title. */
  padding-top: 120px;
  padding-bottom: 40px;
}

#seriesModalTitle {
  /* REFACTOR: Make the title a fixed header within the modal for better context. */
  position: fixed;
  top: 40px; /* Position it below the close button */
  left: 50%;
  transform: translateX(-50%);
  width: 100%;
  text-align: center;
  z-index: 101; /* Ensure it's above the grid but below the close button if needed */
  font-family: 'Playfair Display', serif;
  font-size: 2.5rem;
  font-weight: 900;
  color: var(--glass-text);
  text-shadow: 0 2px 10px rgba(0,0,0,0.2);
  /* Prevent the title from blocking clicks on the modal background for closing */
  pointer-events: none;
}

.series-parts-grid {
  /* REFACTOR: Change from a multi-column grid to a single-column flex layout. */
  /* REFACTOR: Use a grid layout to perfectly match the main page's card sizing. */
  display: grid; /* FIX: Use the same responsive grid layout as the main page. */
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  width: 100%;
  margin: 0 auto;
  padding: 1rem;
  /* REFACTOR: Add a small top margin to create space below the fixed title. */
  margin-top: 1rem; /* FIX: Ensure padding is included within the element's total width to prevent horizontal overflow. */
  box-sizing: border-box;
}

/* FIX: The grid container now handles sizing, so no special width is needed on the cards. */

/* --- NEW: Top & Bottom Vignettes for Main Page --- */
.top-vignette-main {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 150px;
    z-index: 6; /* Sit behind the header buttons (z-index 10+) and notification bar (z-index 7) */
    pointer-events: none;
    background: linear-gradient(to bottom, rgba(0,0,0,0.35) 0%, transparent 100%);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    mask-image: linear-gradient(to bottom, black 50%, transparent 100%);
    -webkit-mask-image: linear-gradient(to bottom, black 50%, transparent 100%);
}

.bottom-vignette-main {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 120px;
    z-index: 6; /* Sit behind the floating buttons (z-index 10) */
    pointer-events: none;
    background: linear-gradient(to top, rgba(0,0,0,0.35) 0%, transparent 100%);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    mask-image: linear-gradient(to top, black 50%, transparent 100%);
    -webkit-mask-image: linear-gradient(to top, black 50%, transparent 100%);
}

/* NEW: Hide vignettes on lowest performance level */
.perf-level-1 .top-vignette-main,
.perf-level-1 .bottom-vignette-main {
    display: none;
}
